[sink:nginx-search]
type = ElasticSearch
connections = http://localhost:9200
timeout = 10

[sink:nginx-email]
type = Email
host = localhost
port = 25
creds = user1 password1
to = me@example.org 
rollup = true
template = 

    % for form in forms[:25]:
    {form.timestamp} [{form.severity}] {form.message}
    % endfor
    % if len(forms) > 25:
    ... and {len(forms) - 25} more
     %endif

# nginx-access

[source:nginx-access]
globs = **/nginx-access*
pattern =
    
    (?P<ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s+
    -\s+
    (?:(?P<user>\w+)|-)\s+
    \[(?P<timestamp>\d{2}/\w{3}/\d{4}:\d{2}:\d{2}:\d{2}\s+\+\d{4})\]\s+
    "(?:(?P<method>\w+)\s+(?P<uri>.+)\s+HTTP\/(?P<version>\d\.\d)|-)"\s+
    (?:(?P<status>\d+)|-)\s+
    (?:(?P<bytes_sent>\d+)|-)\s+
    "(?P<referrer>.*?)"\s+
    "(?P<user_agent>.*?)"\s+
    (?P<request_time>\d+\.\d+)
    # extras
    (?:\s+(?:
    "guru_id=(?:(?P<guru_id>\w+)|-)"|
    "\w+=.+?"))*

form = 

    class Payload(slurp.Form):
    
        ip = slurp.form.String()
        user = slurp.form.String(default=None)
        method = slurp.form.String(default=None)
        uri = slurp.form.String(default=None)
        version = slurp.form.String(default=None)
        status = slurp.form.Integer()
        bytes = slurp.form.Integer(default=0)
        referrer = slurp.form.String(default=None)
        user_agent = slurp.form.String(default=None)
        request_time = slurp.form.Float(default=None)
        guru_id = slurp.form.String(default=None)
    
    class form(slurp.Form):
    
        src_file = slurp.form.String('block.path').from_context()
        offset_b = slurp.form.Integer('block.begin').from_context()
        offset_e = slurp.form.Integer('block.end').from_context()
        timestamp = slurp.form.Datetime(format='DD/MMM/YYYY:HH:mm:ss +mmmm')
        payload = slurp.form.SubForm(Payload, None)

[channel:nginx-access-search]
sources = nginx-access
sink = nginx-search
form = 

    class form(slurp.Form):
    
        index = slurp.form.String().format(
            'logs_{year:02}{month:02}{day:02}',
            year='document.timestamp.year',
            month='document.timestamp.month',
            day='document.timestamp.day',
        )
        type = slurp.form.String().constant('nginx_access')
        document = slurp.form.Field(None)

# nginx-error

[source:nginx-error]
globs = **/nginx-error*
prefix = \d{4}/\d{2}/\d{2}\s+\d{2}:\d{2}:\d{2}\s+\[\w+\]\s+
pattern =

    (?P<timestamp>\d{4}/\d{2}/\d{2}\s+\d{2}:\d{2}:\d{2})\s+
    \[(?P<severity>\w+)\]\s+
    (?P<message>.*)

form =

    class Payload(slurp.Form):

        message = slurp.form.String()
    
    
    class form(slurp.Form):
    
        src_file = slurp.form.String('block.path').from_context()
        offset_b = slurp.form.Integer('block.begin').from_context()
        offset_e = slurp.form.Integer('block.end').from_context()
        timestamp = slurp.form.Datetime(format='YYYY/MM/DD HH:mm:ss')
        severity = slurp.form.String()
        payload = slurp.form.SubForm(Payload, None)


[channel:nginx-error-search]
sources = nginx-error
sink = nginx-search
form =

    class form(slurp.Form):

        index = slurp.form.String().format(
            'logs_{year:02}{month:02}{day:02}',
            year='document.timestamp.year',
            month='document.timestamp.month',
            day='document.timestamp.day',
        )
    
        type = slurp.form.String().constant('nginx_error')
    
        document = slurp.form.Field(None)

filter =

    def filter(form, block):
        return form.document.severity not in ('info',)
