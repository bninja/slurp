[source:test-source]
globs = **/test* *test*
pattern = 

    (?P<ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s+
    -\s+
    (?:(?P<user>\w+)|-)\s+
    \[(?P<timestamp>\d{2}\/\w{3}\/\d{4}:\d{2}:\d{2}:\d{2})\]\s+
    "(?:(?P<method>\w+)\s+(?P<uri>.+)\s+HTTP\/(?P<version>\d\.\d)|-)"\s+
    (?:(?P<status>\d+)|-)\s+
    (?:(?P<bytes>\d+)|-)\s+
    "(?:(?P<referrer>.*?)|-)"\s+
    "(?P<user_agent>.*?)"
    (?:\s+(?:
    request_time_seconds=(?:(?P<request_time_secs>\d+)|-)|
    request_time_microseconds=(?:(?P<request_time_usecs>\d+)|-)|
    guru_id=(?:(?P<guru_id>\w+)|-)|
    \w+=.+?))*

form =

    class form(slurp.Form):

        ip = slurp.form.String()
    
        user = slurp.form.String(default=None)
    
        method = slurp.form.String(default=None)
    
        uri = slurp.form.String(default=None)
    
        version = slurp.form.String(default=None)
    
        status = slurp.form.Integer(default=None)
    
        bytes = slurp.form.Integer(default=0)
    
        referrer = slurp.form.String(default=None)
    
        user_agent = slurp.form.String(default=None)
    
        guru_id = slurp.form.String(default=None)
    
        request_time_secs = slurp.form.Float(default=0).min(0).tag('exclude')
    
        request_time_usecs = slurp.form.Float(default=0).min(0).tag('exclude')
    
        request_time = slurp.form.Float(default=None)
    
        @request_time.compute
        def request_time(self):
            if any([self.request_time_secs is None, self.request_time_usecs is None]):
                return slurp.form.NONE
            return float('%d.%06d' % (
                self.request_time_secs, self.request_time_usecs
            ))


[sink:test-sink]
type = Email
creds = user1 password1
to = me@example.org 
rollup = true
template = 

    % for form in forms[:25]:
    {form.timestamp} [{form.severity}] {form.message}
    % endfor
    % if len(forms) > 25:
    ... and {len(forms) - 25} more
    % endif


[channel:test-channel]
sources = test-source
sink = test-channel
