#!/bin/sh
#
# slurp - this script starts and stops the slurp daemon
#
# chkconfig: - 85 15
# description: slurp
# processname: slurp
# config: /etc/sysconfig/slurp
# pidfile: /var/run/slurp.pid
# lockfile: /var/lock/subsys/slurp

# source function library.
. /etc/rc.d/init.d/functions

# source networking configuration.
. /etc/sysconfig/network

# check that networking is up.
[ "$NETWORKING" = "no" ] && exit 0

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=slurp
USER=root
PROG=`which slurp`
PID_FILE="/var/run/slurp.pid"
LOCK_FILE="/var/lock/subsys/slurp"
CONFIG="/etc/sysconfig/slurp"
WORKERS=1

MONITOR_PATHS="/var/log/messages"
STATE_DIR="/var/lib/slurp"
CONF_FILE="/etc/slurp/slurp.conf"
LOG_LEVEL="info"

if [ -f $CONFIG ]; then
    . $CONFIG
fi

OPTS="monitor \
$MONITOR_PATHS \
--state-dir=$STATE_DIR \
--conf-file=$CONF_FILE \
--log-level=$LOG_LEVEL \
--daemonize --pid-file=$PID_FILE \
--workers=$WORKERS \
--enable-syslog"

start() {
    [ -x $PROG ] || exit 5
    echo -n $"Starting $NAME: "
    if [ "$(id -u)" != "0" ] || [ "$USER" = "root" ] ; then
        daemon --pidfile $PID_FILE $PROG $OPTS
    else
        daemon --pidfile $PID_FILE --user $USER $PROG $OPTS
    fi
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $LOCK_FILE
    return $retval
}

stop() {
    echo -n $"Stopping $NAME: "
    killproc -p $PID_FILE $NAME
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $LOCK_FILE
    return $retval
}

restart() {
    stop
    start
}

reload() {
    echo -n $"Reloading $NAME: "
    killproc -p $PID_FILE $NAME -HUP
    echo
}

force_reload() {
    restart
}

rh_status() {
    status -p $PID_FILE $NAME
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    cond-restart|try-restart)
        rh_status_q || exit 0
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|cond-restart|try-restart|force-reload}"
        exit 2
esac
